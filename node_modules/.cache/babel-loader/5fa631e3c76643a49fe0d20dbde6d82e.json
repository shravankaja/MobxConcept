{"ast":null,"code":"import { action, makeAutoObservable, runInAction, when } from \"mobx\";\n\nclass WhenReactionStore {\n  constructor() {\n    this.count = 0;\n    this.msg = \"\";\n    makeAutoObservable(this);\n    when(() => this.isCounterTen, () => this.dispose()); // when take mainly two arguments \n    // first one it the predicate and second one is the function that has to run when the predicate \n    // function returns true \n  }\n\n  inc() {\n    this.count = this.count + 1;\n    when(() => this.isCounterMoreThenTen, () => this.dispose()); // in this when \n    // we run the preicate till that the count is less than equal to 10  and if it is more than 10 \n    // the pedicate funicition is given false value due to which the the second argumen which is the function \n    // will get executed.\n    // so when runs the predicate function unitl it recives false as soon as it recives true it it goes to the \n    // second argument and runs the function\n  }\n\n  dispose() {\n    console.log(\"hello i got triggered\");\n    this.count = 0;\n  }\n\n  showCountStatus() {\n    console.log(this.isCounterTen);\n\n    if (this.isCounterTen) {\n      return this.msg = \"Counter will reset soon\";\n    } else if (!this.isCounterTen) {\n      return this.msg = \"counter is less than 10\";\n    }\n  }\n\n  get isCounterTen() {\n    return this.count > 8;\n  }\n\n  get isCounterMoreThenTen() {\n    return this.count > 10;\n  }\n\n}\n\nexport default WhenReactionStore;","map":{"version":3,"sources":["E:/Mobx_Example/mobxdemo/src/Stores/When_Store.js"],"names":["action","makeAutoObservable","runInAction","when","WhenReactionStore","constructor","count","msg","isCounterTen","dispose","inc","isCounterMoreThenTen","console","log","showCountStatus"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,kBAAjB,EAAqCC,WAArC,EAAkDC,IAAlD,QAA8D,MAA9D;;AAGA,MAAMC,iBAAN,CAAwB;AAIpBC,EAAAA,WAAW,GAAG;AAAA,SAHdC,KAGc,GAHN,CAGM;AAAA,SAFdC,GAEc,GAFR,EAEQ;AACVN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,IAAAA,IAAI,CAAC,MAAM,KAAKK,YAAZ,EAA2B,MAAM,KAAKC,OAAL,EAAjC,CAAJ,CAFU,CAE2C;AACrD;AACA;AAGH;;AAEDC,EAAAA,GAAG,GAAG;AACF,SAAKJ,KAAL,GAAY,KAAKA,KAAL,GAAa,CAAzB;AACAH,IAAAA,IAAI,CAAC,MAAM,KAAKQ,oBAAZ,EAAmC,MAAM,KAAKF,OAAL,EAAzC,CAAJ,CAFE,CAE2D;AAC7D;AACA;AACA;AACA;AACA;AACH;;AAEDA,EAAAA,OAAO,GAAG;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAKP,KAAL,GAAa,CAAb;AACH;;AAEDQ,EAAAA,eAAe,GAAG;AAEdF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,YAAjB;;AAGA,QAAG,KAAKA,YAAR,EAAsB;AAClB,aAAO,KAAKD,GAAL,GAAW,yBAAlB;AAEH,KAHD,MAIK,IAAG,CAAC,KAAKC,YAAT,EAAuB;AACxB,aAAO,KAAKD,GAAL,GAAW,yBAAlB;AACH;AACJ;;AAEe,MAAZC,YAAY,GAAG;AAEf,WAAO,KAAKF,KAAL,GAAc,CAArB;AACH;;AAEuB,MAApBK,oBAAoB,GAAG;AACvB,WAAO,KAAKL,KAAL,GAAa,EAApB;AACH;;AAjDmB;;AAoDxB,eAAeF,iBAAf","sourcesContent":["import { action, makeAutoObservable, runInAction, when } from \"mobx\";\r\n\r\n\r\nclass WhenReactionStore {\r\n    count = 0   \r\n    msg = \"\"\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n        when(() => this.isCounterTen , () => this.dispose()) // when take mainly two arguments \r\n        // first one it the predicate and second one is the function that has to run when the predicate \r\n        // function returns true \r\n      \r\n\r\n    }\r\n\r\n    inc() {\r\n        this.count= this.count + 1\r\n        when(() => this.isCounterMoreThenTen , () => this.dispose()) // in this when \r\n        // we run the preicate till that the count is less than equal to 10  and if it is more than 10 \r\n        // the pedicate funicition is given false value due to which the the second argumen which is the function \r\n        // will get executed.\r\n        // so when runs the predicate function unitl it recives false as soon as it recives true it it goes to the \r\n        // second argument and runs the function\r\n    }\r\n\r\n    dispose() {\r\n        console.log(\"hello i got triggered\")\r\n        this.count = 0\r\n    }\r\n\r\n    showCountStatus() {\r\n\r\n        console.log(this.isCounterTen)\r\n\r\n        \r\n        if(this.isCounterTen) {\r\n            return this.msg = \"Counter will reset soon\"\r\n\r\n        }\r\n        else if(!this.isCounterTen) {\r\n            return this.msg = \"counter is less than 10\"\r\n        }\r\n    }\r\n    \r\n    get isCounterTen() {\r\n        \r\n        return this.count >  8\r\n    }\r\n\r\n    get isCounterMoreThenTen() {\r\n        return this.count > 10 \r\n    }\r\n\r\n}\r\nexport default WhenReactionStore;"]},"metadata":{},"sourceType":"module"}