{"ast":null,"code":"import { action, makeAutoObservable, observable } from \"mobx\";\n\nclass MakeAutoObservableStore {\n  constructor() {\n    this.count = 0;\n    this.statement = \"conter no action\";\n    this.actionType = \"\";\n    makeAutoObservable(this, {}, {\n      autoBind: true\n    }); // using makeautoobservable we need not specify actions and observabels and flows \n    // but we can override by providing annotations\n    // we can use autBind as true to bind all the actions with 'this'\n  }\n\n  inc() {\n    // this is the action which happens in response to a event like click or change\n    console.log(this.count);\n    this.count = this.count + 1;\n    this.actionType = \"+\";\n  }\n\n  dec() {\n    // \n    this.count = this.count - 1;\n    this.actionType = \"-\";\n  }\n\n  showStatement() {\n    return this.statementType;\n  }\n\n  get statementType() {\n    if (this.actionType.includes(\"+\")) {\n      return this.statement = \"Counter is incremented \";\n    } else if (this.actionType.includes(\"-\")) {\n      return this.statement = \"Counter is decremented\";\n    }\n  }\n\n}\n\nexport default MakeAutoObservableStore;","map":{"version":3,"sources":["E:/Mobx_Example/mobxdemo/src/Stores/makeAutoObservable_Store.js"],"names":["action","makeAutoObservable","observable","MakeAutoObservableStore","constructor","count","statement","actionType","autoBind","inc","console","log","dec","showStatement","statementType","includes"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,kBAAjB,EAAqCC,UAArC,QAAuD,MAAvD;;AAIA,MAAMC,uBAAN,CAA8B;AAK1BC,EAAAA,WAAW,GAAG;AAAA,SAJdC,KAIc,GAJN,CAIM;AAAA,SAHdC,SAGc,GAHF,kBAGE;AAAA,SAFdC,UAEc,GAFD,EAEC;AACVN,IAAAA,kBAAkB,CAAC,IAAD,EAAO,EAAP,EAAU;AAACO,MAAAA,QAAQ,EAAG;AAAZ,KAAV,CAAlB,CADU,CACqC;AAC/C;AACA;AACH;;AAEDC,EAAAA,GAAG,GAAG;AAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,SAAKA,KAAL,GAAa,KAAKA,KAAL,GAAW,CAAxB;AACA,SAAKE,UAAL,GAAkB,GAAlB;AAEH;;AAEDK,EAAAA,GAAG,GAAG;AAAE;AACJ,SAAKP,KAAL,GAAa,KAAKA,KAAL,GAAW,CAAxB;AACA,SAAKE,UAAL,GAAkB,GAAlB;AAEH;;AAEDM,EAAAA,aAAa,GAAI;AACb,WAAO,KAAKC,aAAZ;AACH;;AAEgB,MAAbA,aAAa,GAAI;AACjB,QAAG,KAAKP,UAAL,CAAgBQ,QAAhB,CAAyB,GAAzB,CAAH,EAAkC;AAC9B,aAAO,KAAKT,SAAL,GAAiB,yBAAxB;AACH,KAFD,MAGK,IAAG,KAAKC,UAAL,CAAgBQ,QAAhB,CAAyB,GAAzB,CAAH,EAAkC;AACnC,aAAO,KAAKT,SAAL,GAAiB,wBAAxB;AACH;AAEJ;;AApCyB;;AAuC9B,eAAeH,uBAAf","sourcesContent":["import { action, makeAutoObservable, observable } from \"mobx\"\r\n\r\n\r\n\r\nclass MakeAutoObservableStore {\r\n    count = 0\r\n    statement = \"conter no action\"\r\n    actionType = \"\"\r\n\r\n    constructor() {\r\n        makeAutoObservable(this, {},{autoBind : true}) // using makeautoobservable we need not specify actions and observabels and flows \r\n        // but we can override by providing annotations\r\n        // we can use autBind as true to bind all the actions with 'this'\r\n    }\r\n\r\n    inc() { // this is the action which happens in response to a event like click or change\r\n        console.log(this.count)\r\n        this.count = this.count+1\r\n        this.actionType = \"+\"\r\n       \r\n    }\r\n\r\n    dec() { // \r\n        this.count = this.count-1 \r\n        this.actionType = \"-\"\r\n       \r\n    }\r\n\r\n    showStatement () {\r\n        return this.statementType\r\n    }\r\n\r\n    get statementType () {\r\n        if(this.actionType.includes(\"+\")) {\r\n            return this.statement = \"Counter is incremented \"\r\n        }\r\n        else if(this.actionType.includes(\"-\")) {\r\n            return this.statement = \"Counter is decremented\"\r\n        }\r\n\r\n    }\r\n} \r\n\r\nexport default MakeAutoObservableStore;\r\n\r\n"]},"metadata":{},"sourceType":"module"}