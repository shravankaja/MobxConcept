{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mobx_Example\\\\mobxdemo\\\\src\\\\Components\\\\LocalObservable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../CSS/main.css';\nimport { useLocalObservable, Observer } from \"mobx-react-lite\";\nimport { observable } from 'mobx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LocalObservable() {\n  _s();\n\n  const [task, setTask] = React.useState(\"\");\n  const [login] = useState(() => observable({\n    username: \"\"\n  }));\n\n  const takeInput = event => {\n    setTask(event.target.value);\n  };\n\n  const saveInput = () => {\n    toDo.todoList.push(task);\n  };\n\n  const takeUsername = event => {\n    login.username = event.target.value;\n  };\n\n  const toDo = useLocalObservable(() => ({\n    // using localObservable hook we are initating a local observabel state instead of creating a store itself\n    todoList: [],\n    name: \"Shravan\"\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"example\",\n      children: /*#__PURE__*/_jsxDEV(Observer, {\n        children: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Tasks of : \", toDo.name, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter the username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: takeUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Enter tasks of \", toDo.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: takeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveInput,\n            style: {\n              height: \"20px\"\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tasks of \", toDo.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), toDo.todoList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(LocalObservable, \"FDUwdbuJNWqDuuHkT2g9T20yQ88=\", false, function () {\n  return [useLocalObservable];\n});\n\n_c = LocalObservable;\nexport default LocalObservable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalObservable\");","map":{"version":3,"sources":["E:/Mobx_Example/mobxdemo/src/Components/LocalObservable.jsx"],"names":["React","useState","useLocalObservable","Observer","observable","LocalObservable","task","setTask","login","username","takeInput","event","target","value","saveInput","toDo","todoList","push","takeUsername","name","height","map"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,iBAAP;AACA,SAASC,kBAAT,EAA6BC,QAA7B,QAA6C,iBAA7C;AACA,SAASC,UAAT,QAA2B,MAA3B;;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,KAAK,CAACC,QAAN,CAAe,EAAf,CAAvB;AACA,QAAM,CAACO,KAAD,IAAUP,QAAQ,CAAC,MAAMG,UAAU,CAAC;AACtCK,IAAAA,QAAQ,EAAE;AAD4B,GAAD,CAAjB,CAAxB;;AAIA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AACrBJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACP,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpBC,IAAAA,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBX,IAAnB;AACH,GAFD;;AAIA,QAAMY,YAAY,GAAIP,KAAD,IAAW;AAC5BH,IAAAA,KAAK,CAACC,QAAN,GAAiBE,KAAK,CAACC,MAAN,CAAaC,KAA9B;AACH,GAFD;;AAIA,QAAME,IAAI,GAAGb,kBAAkB,CAAC,OAAO;AAAG;AACtCc,IAAAA,QAAQ,EAAG,EADwB;AAEnCG,IAAAA,IAAI,EAAG;AAF4B,GAAP,CAAD,CAA/B;AAKA,sBACI;AAAA,2BACA;AAAK,MAAA,KAAK,EAAG,SAAb;AAAA,6BACI,QAAC,QAAD;AAAA,kBAEQ,mBAGA;AAAA,oCAAiBJ,IAAI,CAACI,IAAtB,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAGA;AAAO,YAAA,QAAQ,EAAGD;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHA,eAKA;AAAA,0CAAmBH,IAAI,CAACI,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAOI;AAAO,YAAA,QAAQ,EAAIT;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA,kBARJ,eASE;AAAQ,YAAA,OAAO,EAAII,SAAnB;AAA8B,YAAA,KAAK,EAAI;AAACM,cAAAA,MAAM,EAAG;AAAV,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAUA;AAAA,oCAAaL,IAAI,CAACI,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVA,EAWEJ,IAAI,CAACC,QAAL,CAAcK,GAAd,CAAmBf,IAAD,iBAEhB;AAAA,sBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,kBAFF,CAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAkCH;;GAzDQD,e;UAkBQH,kB;;;KAlBRG,e;AA2DT,eAAeA,eAAf","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport '../CSS/main.css'\r\nimport { useLocalObservable, Observer } from \"mobx-react-lite\"\r\nimport { observable } from 'mobx'\r\n\r\nfunction LocalObservable() {\r\n    const [task,setTask] = React.useState(\"\")\r\n    const [login] = useState(() => observable({\r\n        username: \"\"\r\n    }))\r\n\r\n    const takeInput = (event) => {\r\n            setTask(event.target.value)\r\n    }\r\n\r\n    const saveInput = () => {\r\n        toDo.todoList.push(task)\r\n    }\r\n\r\n    const takeUsername = (event) => {\r\n        login.username = event.target.value\r\n    }\r\n\r\n    const toDo = useLocalObservable(() => ({  // using localObservable hook we are initating a local observabel state instead of creating a store itself\r\n        todoList : [],\r\n        name : \"Shravan\"\r\n    }))\r\n    \r\n    return (\r\n        <>\r\n        <div class = \"example\">\r\n            <Observer>\r\n                { \r\n                    () => (\r\n                \r\n\r\n                    <div>Tasks of : {toDo.name}\r\n                    <p>Enter the username</p>\r\n\r\n                    <input onChange ={takeUsername} ></input>\r\n                    \r\n                    <p>Enter tasks of {toDo.name}</p>\r\n                    \r\n                        <input onChange = {takeInput} ></input>\r\n                        <br></br>\r\n                      <button onClick = {saveInput} style = {{height : \"20px\"}} >Submit</button> \r\n                    <p>Tasks of {toDo.name}</p>\r\n                    { toDo.todoList.map((task) => (\r\n\r\n                        <div>{task}</div>\r\n                    ))\r\n\r\n\r\n                    }\r\n\r\n\r\n                    </div> )\r\n                }\r\n            </Observer>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LocalObservable"]},"metadata":{},"sourceType":"module"}