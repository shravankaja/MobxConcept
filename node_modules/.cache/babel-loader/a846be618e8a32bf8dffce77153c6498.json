{"ast":null,"code":"import { action, makeAutoObservable } from \"mobx\";\n\nclass ActionStore {\n  constructor() {\n    this.data = [];\n    this.status = \"loading\";\n    makeAutoObservable(this);\n  }\n\n  getAssestsData() {\n    fetch('https://www.cryptingup.com/api/assets').then(action(resp => {\n      // every step (tick) that updates observables in an asynchronous process should be marked as action.\n      console.log(resp);\n\n      if (resp.status == 200) {\n        this.status = \"loaded\";\n      }\n    }));\n  }\n\n  async useRunInAction() {\n    const data = await fetch('https://www.cryptingup.com/api/assets');\n    console.log(data);\n  }\n\n}\n\nexport default ActionStore;","map":{"version":3,"sources":["E:/Mobx_Example/mobxdemo/src/Stores/Actions_Store.js"],"names":["action","makeAutoObservable","ActionStore","constructor","data","status","getAssestsData","fetch","then","resp","console","log","useRunInAction"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,kBAAjB,QAA2C,MAA3C;;AAGA,MAAMC,WAAN,CAAkB;AAIdC,EAAAA,WAAW,GAAG;AAAA,SAHdC,IAGc,GAHP,EAGO;AAAA,SAFdC,MAEc,GAFL,SAEK;AACVJ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEDK,EAAAA,cAAc,GAAI;AACdC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CAA+CC,IAA/C,CAEAR,MAAM,CAACS,IAAI,IAAI;AAAG;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAGA,IAAI,CAACJ,MAAL,IAAe,GAAlB,EAAuB;AACnB,aAAKA,MAAL,GAAc,QAAd;AACH;AAEJ,KANK,CAFN;AAWH;;AAEmB,QAAdO,cAAc,GAAI;AACpB,UAAMR,IAAI,GAAG,MAAMG,KAAK,CAAC,uCAAD,CAAxB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACH;;AAzBa;;AA6BlB,eAAeF,WAAf","sourcesContent":["import { action, makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass ActionStore {\r\n    data = []\r\n    status = \"loading\"\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    getAssestsData () {\r\n        fetch('https://www.cryptingup.com/api/assets').then(\r\n       \r\n        action(resp => {  // every step (tick) that updates observables in an asynchronous process should be marked as action.\r\n            console.log(resp)\r\n            if(resp.status == 200) {\r\n                this.status = \"loaded\"\r\n            }\r\n            \r\n        })  \r\n\r\n        )\r\n    }\r\n\r\n   async  useRunInAction () {\r\n        const data = await fetch('https://www.cryptingup.com/api/assets')\r\n        console.log(data)\r\n    }\r\n\r\n}\r\n\r\nexport default ActionStore;"]},"metadata":{},"sourceType":"module"}