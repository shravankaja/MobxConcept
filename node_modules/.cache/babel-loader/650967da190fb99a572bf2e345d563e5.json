{"ast":null,"code":"import { action, makeAutoObservable } from \"mobx\";\n\nclass MakeAutoObservableStore {\n  constructor() {\n    this.count = 0;\n    this.statement = \"conter no action\";\n    this.actionType = \"\";\n    makeAutoObservable(this); // using makeautoobservable we need not specify actions and observabels and flows \n    // but we can override by providing annotations\n  }\n\n  inc() {\n    this.count = this.count + 1;\n    this.actionType = \"+\";\n    this.statementType;\n  }\n\n  dec() {\n    this.count = this.count - 1;\n    this.actionType = \"-\";\n    this.statementType;\n  }\n\n  showStatement() {\n    return this.statementType;\n  }\n\n  get statementType() {\n    if (this.actionType.includes(\"+\")) {\n      return this.statement = \"Counter is incremented \";\n    } else if (this.actionType.includes(\"-\")) {\n      return this.statement = \"Counter is decremented\";\n    }\n  }\n\n}\n\nexport default MakeAutoObservableStore;","map":{"version":3,"sources":["E:/Mobx_Example/mobxdemo/src/Stores/makeAutoObservable_Store.js"],"names":["action","makeAutoObservable","MakeAutoObservableStore","constructor","count","statement","actionType","inc","statementType","dec","showStatement","includes"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,kBAAjB,QAA2C,MAA3C;;AAIA,MAAMC,uBAAN,CAA8B;AAK1BC,EAAAA,WAAW,GAAG;AAAA,SAJdC,KAIc,GAJN,CAIM;AAAA,SAHdC,SAGc,GAHF,kBAGE;AAAA,SAFdC,UAEc,GAFD,EAEC;AACVL,IAAAA,kBAAkB,CAAC,IAAD,CAAlB,CADU,CACe;AACzB;AACH;;AAEDM,EAAAA,GAAG,GAAG;AACF,SAAKH,KAAL,GAAa,KAAKA,KAAL,GAAW,CAAxB;AACA,SAAKE,UAAL,GAAkB,GAAlB;AACA,SAAKE,aAAL;AACH;;AAEDC,EAAAA,GAAG,GAAG;AACF,SAAKL,KAAL,GAAa,KAAKA,KAAL,GAAW,CAAxB;AACA,SAAKE,UAAL,GAAkB,GAAlB;AACA,SAAKE,aAAL;AACH;;AAEDE,EAAAA,aAAa,GAAI;AACb,WAAO,KAAKF,aAAZ;AACH;;AAEgB,MAAbA,aAAa,GAAI;AACjB,QAAG,KAAKF,UAAL,CAAgBK,QAAhB,CAAyB,GAAzB,CAAH,EAAkC;AAC9B,aAAO,KAAKN,SAAL,GAAiB,yBAAxB;AACH,KAFD,MAGK,IAAG,KAAKC,UAAL,CAAgBK,QAAhB,CAAyB,GAAzB,CAAH,EAAkC;AACnC,aAAO,KAAKN,SAAL,GAAiB,wBAAxB;AACH;AAEJ;;AAlCyB;;AAqC9B,eAAeH,uBAAf","sourcesContent":["import { action, makeAutoObservable } from \"mobx\"\r\n\r\n\r\n\r\nclass MakeAutoObservableStore {\r\n    count = 0\r\n    statement = \"conter no action\"\r\n    actionType = \"\"\r\n\r\n    constructor() {\r\n        makeAutoObservable(this) // using makeautoobservable we need not specify actions and observabels and flows \r\n        // but we can override by providing annotations\r\n    }\r\n\r\n    inc() {\r\n        this.count = this.count+1\r\n        this.actionType = \"+\"\r\n        this.statementType\r\n    }\r\n\r\n    dec() {\r\n        this.count = this.count-1 \r\n        this.actionType = \"-\"\r\n        this.statementType\r\n    }\r\n\r\n    showStatement () {\r\n        return this.statementType\r\n    }\r\n\r\n    get statementType () {\r\n        if(this.actionType.includes(\"+\")) {\r\n            return this.statement = \"Counter is incremented \"\r\n        }\r\n        else if(this.actionType.includes(\"-\")) {\r\n            return this.statement = \"Counter is decremented\"\r\n        }\r\n\r\n    }\r\n} \r\n\r\nexport default MakeAutoObservableStore;\r\n\r\n"]},"metadata":{},"sourceType":"module"}