{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mobx_Example\\\\mobxdemo\\\\src\\\\Components\\\\Actions.jsx\";\nimport React from 'react';\nimport '../CSS/main.css';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Assests({\n  store\n}) {\n  var _s = $RefreshSig$();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"example\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => store.getAssestsData(),\n        children: \"Show Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Using Action to handle state change  :   \", store.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: _s(() => {\n          _s();\n\n          return store.useRunInAction();\n        }, \"XtjJDVKydJhuEBMeXCvD5Fxz3ik=\", false, function () {\n          return [store.useRunInAction];\n        }),\n        children: \"Asyn run in action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: store.statusGivenByRunInAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Assests;\nexport default _c2 = observer(Assests);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Assests\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/Mobx_Example/mobxdemo/src/Components/Actions.jsx"],"names":["React","observer","Assests","store","getAssestsData","status","useRunInAction","statusGivenByRunInAction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA0B;AAAA;;AACtB,sBACI;AAAA,2BACA;AAAK,MAAA,KAAK,EAAG,SAAb;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAI,MAAKA,KAAK,CAACC,cAAN,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gEAA+CD,KAAK,CAACE,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,KAAI;AAAA;;AAAA,iBAAMF,KAAK,CAACG,cAAN,EAAN;AAAA,SAAJ;AAAA,kBAAUH,KAAK,CAACG,cAAhB;AAAA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAMH,KAAK,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH;;KAXQL,O;AAaT,qBAAgBD,QAAQ,CAACC,OAAD,CAAxB","sourcesContent":["import React from 'react'\r\nimport '../CSS/main.css'\r\nimport {observer} from 'mobx-react-lite'\r\n\r\nfunction Assests({store}) {\r\n    return (\r\n        <>\r\n        <div class = \"example\">\r\n            <button onClick = {() =>store.getAssestsData()}>Show Data</button>\r\n            <div>Using Action to handle state change  :   {store.status}</div>\r\n            <button onClick = {() => store.useRunInAction()} >Asyn run in action</button>\r\n            <div>{store.statusGivenByRunInAction}</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default  observer(Assests);"]},"metadata":{},"sourceType":"module"}